var abi = /* abi generated by the compiler */
var ZombieFeedingContract = web3.eth.contract(abi)
var contractAddress = /* our contract address on Ethereum after deploying */
var ZombieFeeding = ZombieFeedingContract.at(contractAddress)

// Assuming we have our zombie's ID and the kitty ID we want to attack
let zombieId = 1;
let kittyId = 1;

// To get the CryptoKitty's image, we need to query their web API. This
// information isn't stored on the blockchain, just their webserver.
// If everything was stored on a blockchain, we wouldn't have to worry
// about the server going down, them changing their API, or the company 
// blocking us from loading their assets if they don't like our zombie game ;)
let apiUrl = "https://api.cryptokitties.co/kitties/" + kittyId
$.get(apiUrl, function(data) {
  let imgUrl = data.image_url
  // do something to display the image
})

// When the user clicks on a kitty:
$(".kittyImage").click(function(e) {
  // Call our contract's `feedOnKitty` method
  ZombieFeeding.feedOnKitty(zombieId, kittyId)
})

// Listen for a NewZombie event from our contract so we can display it:
ZombieFactory.NewZombie(function(error, result) {
  if (error) return
  // This function will display the zombie, like in lesson 1:
  generateZombie(result.zombieId, result.name, result.dna)
})


/////////////////////////////////////////////////////
///// TRANSLATE
/*
var abi = /* abi generated by the compiler */
/*
var ZombieFeedingContract = web3.eth.contract(abi)
var contractAddress = /* our contract address on Ethereum after deploying */
/*
var ZombieFeeding = ZombieFeedingContract.at(contractAddress)

// Предположим, что у нас есть ID зомби и ID котика, на которого мы нападаем 
let zombieId = 1;
let kittyId = 1;

// Чтобы получить изображение Криптокотика, надо запросить его веб-API. 
// Эта информация хранится не в блокчейне, а на сервере. 
// Если бы все хранилось в блокчейне, то не нужно было бы беспокоиться,
// что упадет сервер, сменят API, или компания отрубит доступ к их коду,
// потому что им не понравится наши зомбаки.;)
let apiUrl = "https://api.cryptokitties.co/kitties/" + kittyId
$.get(apiUrl, function(data) {
  let imgUrl = data.image_url
  // Выведи изображение 
})

// когда игрок кликает на котика:
$(".kittyImage").click(function(e) {
  // Вызываем метод `feedOnKitty` из нашего контракта
  ZombieFeeding.feedOnKitty(zombieId, kittyId)
})

// Слушаем событие NewZombie из нашего контракта и отображаем его: 

ZombieFactory.NewZombie(function(error, result) {
  if (error) return
  // Функция отобразит зомби, как в Уроке 1:
  generateZombie(result.zombieId, result.name, result.dna)
})
*/